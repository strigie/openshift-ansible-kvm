---
- name: fetch kubeadmin-password from kvm host
  fetch:
    src:  "{{ files.kvm }}/bare-metal/auth/kubeadmin-password"
    dest: "{{ files.base }}/conf/"
    flat: yes
  become: yes

- name: fetch kubeconfig from kvm host
  fetch:
    src:  "{{ files.kvm }}/bare-metal/auth/kubeconfig"
    dest: "{{ files.base }}/conf/"
    flat: yes
  become: yes

- name: wait-for bootstrap-complete
  command: "/root/bin/openshift-install --dir={{ files.kvm }}/bare-metal wait-for bootstrap-complete"
  async: 3600
  poll: 0
  register: bootstrap_complete_sleeper

- name: 'bootstrap-complete - check on async task'
  async_status:
    jid: "{{ bootstrap_complete_sleeper.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 1200
  delay: 30

- name: oc whoami
  command: /root/bin/oc whoami
  environment:
    KUBECONFIG: "{{ files.kvm }}/bare-metal/auth/kubeconfig"
  retries: 100
  delay: 10
  register: result
  until: result is not failed

- name: oc get nodes
  command: /root/bin/oc get nodes
  environment:
    KUBECONFIG: "{{ files.kvm }}/bare-metal/auth/kubeconfig"
  retries: 100
  delay: 10
  register: result
  until: result is not failed

- name: oc get csr
  command: /root/bin/oc get csr
  environment:
    KUBECONFIG: "{{ files.kvm }}/bare-metal/auth/kubeconfig"
  retries: 100
  delay: 10
  register: result
  until: result is not failed

- name: oc path to configs.imageregistry.operator.openshift.io/cluster
  command: /root/bin/oc patch configs.imageregistry.operator.openshift.io/cluster --type merge --patch '{"spec":{"storage":{"emptyDir":{}}}}'
  environment:
    KUBECONFIG: "{{ files.kvm }}/bare-metal/auth/kubeconfig"
  retries: 100
  delay: 10
  register: result
  until: result is not failed

- name: wait-for install-complete
  command: "/root/bin/openshift-install --dir={{ files.kvm }}/bare-metal wait-for install-complete"
  async: 3600
  poll: 0
  register: install_complete_sleeper

- name: 'install-complete - check on async task'
  async_status:
    jid: "{{ install_complete_sleeper.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 1200
  delay: 30

- name: remove bootstrap
  shell: |
    virsh destroy {{ item.name }}
    virsh undefine --remove-all-storage {{ item.name }}
  when:
    - keep_bootstrap == false
  with_items: "{{ bootstrap }}"

- name: check kubeadmin-password
  slurp:
    src: "{{ files.kvm }}/bare-metal/auth/kubeadmin-password"
  register: kubeadmin_password

- name: show kubeadmin-password
  debug:
    msg: "{{ kubeadmin_password.content | b64decode }}"
